{"version":3,"file":"static/js/480.81243ace.chunk.js","mappings":"qLACA,EAAuB,wBAAvB,EAA0D,4BAA1D,EAA8F,yB,SCiD9F,EA9CkB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,eAAIC,UAAWC,EAAf,SACGH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAaC,EAApC,EAAoCA,KAApC,OACV,eAAaN,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEM,GAAI,CACFC,SAAS,WAAD,OAAaL,GACrBM,MAAO,CAAEC,KAAMX,IAHnB,UAOI,iCACE,0BACE,gBACEY,IAAG,yCAAoCN,GACvCO,IAAKR,EACLS,MAAOT,EACPU,MAAM,MACNC,OAAO,WAGX,gBAAIf,UAAWC,EAAf,UACGG,EACAE,WApBFH,U,yMCPXa,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,qCACaD,IAIrC,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,kGAEoBC,IAAAA,IAAA,UAClBd,EADkB,kBACAa,EADA,oBACmBd,EADnB,oBAFpB,uBAEKgB,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAI,cAAZ,MAPG,gFAWA,SAASC,EAAoBC,EAAaC,GAC/C,OAAOnB,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,kBAC0BoB,EAD1B,iBAC8CC,EAD9C,oBAKxB,SAASC,EAAUR,GACxB,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,IAI7C,SAASuB,EAAaT,GAC3B,OAAOZ,EAAuB,GAAD,OACxBD,EADwB,kBACNa,EADM,4BACqBd,EADrB,c,uHCxC/B,EAAwB,wB,SCKT,SAASwB,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO3C,EAAP,KAAe4C,EAAf,KACM3C,GAAW4C,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAwBC,MAAK,SAAAd,GAAI,OAAIU,EAAUV,EAAKe,cACnD,KAGD,iCACE,eAAI/C,UAAWC,EAAf,4BAECH,GAAUA,EAAOkD,OAAS,IACzB,SAACC,EAAA,EAAD,CAAWnD,OAAQA,EAAQC,SAAUA","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.js","services/MoviesAPI.js","webpack://goit-react-hw-05-movies/./src/views/HomePage/HomePage.module.css?a66d","views/HomePage/HomePage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__0fwot\",\"listItem\":\"MovieList_listItem__TvXoB\",\"title\":\"MovieList_title__4inTF\"};","import { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './MovieList.module.css';\r\n\r\nconst MovieList = ({ movies, location }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {movies.map(({ id, original_title, poster_path, name }) => (\r\n        <li key={id} className={styles.listItem}>\r\n          <Link\r\n            to={{\r\n              pathname: `/movies/${id}`,\r\n              state: { from: location },\r\n            }}\r\n          >\r\n            {\r\n              <>\r\n                <div>\r\n                  <img\r\n                    src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n                    alt={original_title}\r\n                    title={original_title}\r\n                    width=\"360\"\r\n                    height=\"450\"\r\n                  />\r\n                </div>\r\n                <h2 className={styles.title}>\r\n                  {original_title}\r\n                  {name}\r\n                </h2>\r\n              </>\r\n            }\r\n          </Link>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string,\r\n      poster_path: PropTypes.string,\r\n    }),\r\n  ),\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default MovieList;\r\n","import axios from 'axios';\r\nconst API_KEY = 'ec54c0409f7f71b36a33826187600e03';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport async function fetchMovieById(movieId) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log('===ERROR===', error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesBySearch(searchQuery, currentPage) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${currentPage}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`,\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"HomePage_title__4lJFr\"};","import { useState, useEffect } from 'react';\r\nimport * as MoviesAPI from '../../services/MoviesAPI';\r\nimport { useLocation } from 'react-router-dom';\r\nimport MovieList from '../../components/MovieList/MovieList';\r\nimport styles from './HomePage.module.css';\r\n\r\nexport default function HomePage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    MoviesAPI.fetchMovies().then(data => setMovies(data.results));\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1 className={styles.title}>Trending today</h1>\r\n\r\n      {movies && movies.length > 0 && (\r\n        <MovieList movies={movies} location={location} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["movies","location","className","styles","map","id","original_title","poster_path","name","to","pathname","state","from","src","alt","title","width","height","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","fetchMovieById","movieId","axios","data","console","log","fetchMoviesBySearch","searchQuery","currentPage","fetchCast","fetchReviews","HomePage","useState","setMovies","useLocation","useEffect","MoviesAPI","then","results","length","MovieList"],"sourceRoot":""}