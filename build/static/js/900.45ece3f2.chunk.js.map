{"version":3,"file":"static/js/900.45ece3f2.chunk.js","mappings":"+NACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAkF,kBAAlF,EAA4G,oB,SC2C5G,EAvCa,WACX,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAoBH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAWM,QAC1D,CAACL,KAGF,+BACE,eAAIM,UAAWC,EAAf,SACGT,GACCA,EAAQU,OAAS,GACjBV,EAAQW,KAAI,SAAAC,GAAK,OACf,gBAAoBJ,UAAWC,EAA/B,UACGG,EAAMC,cACL,gBACEL,UAAWC,EACXK,IAAK,0CAAoCF,QAApC,IAAoCA,OAApC,EAAoCA,EAAOC,cAChDE,IAAG,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAOI,gBAGZ,MAEJ,iBAAKR,UAAWC,EAAhB,WACE,4BACE,iCADF,WACgBG,QADhB,IACgBA,OADhB,EACgBA,EAAOI,kBAEvB,4BACE,sCADF,WACqBJ,QADrB,IACqBA,OADrB,EACqBA,EAAOK,kBAfhC,OAASL,QAAT,IAASA,OAAT,EAASA,EAAOM,a,yMClBtBC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,qCACaD,IAIrC,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA8B9B,GAA9B,kGAEoB+B,IAAAA,IAAA,UAClBb,EADkB,kBACAlB,EADA,oBACmBiB,EADnB,oBAFpB,uBAEKe,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAI,cAAZ,MAPG,gFAWA,SAASC,EAAoBC,EAAaC,GAC/C,OAAOlB,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,kBAC0BmB,EAD1B,iBAC8CC,EAD9C,oBAKxB,SAASC,EAAUtC,GACxB,OAAOmB,EAAuB,GAAD,OACxBD,EADwB,kBACNlB,EADM,4BACqBiB,IAI7C,SAASsB,EAAavC,GAC3B,OAAOmB,EAAuB,GAAD,OACxBD,EADwB,kBACNlB,EADM,4BACqBiB,EADrB","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.js","services/MoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__X9OlD\",\"listItem\":\"Cast_listItem__RUSF9\",\"img\":\"Cast_img__SAfvK\",\"names\":\"Cast_names__yl9ex\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport * as MoviesAPI from '../../services/MoviesAPI';\r\nimport styles from './Cast.module.css';\r\n\r\nconst Cast = () => {\r\n  const [credits, setCredits] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    MoviesAPI.fetchCast(movieId).then(({ cast }) => setCredits(cast));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.list}>\r\n        {credits &&\r\n          credits.length > 0 &&\r\n          credits.map(actor => (\r\n            <li key={actor?.id} className={styles.listItem}>\r\n              {actor.profile_path ? (\r\n                <img\r\n                  className={styles.img}\r\n                  src={'https://image.tmdb.org/t/p/w300' + actor?.profile_path}\r\n                  alt={actor?.original_name}\r\n                  // width=\"100px\"\r\n                />\r\n              ) : null}\r\n\r\n              <div className={styles.names}>\r\n                <div>\r\n                  <p>Name:</p> {actor?.original_name}\r\n                </div>\r\n                <div>\r\n                  <p>Character:</p> {actor?.character}\r\n                </div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import axios from 'axios';\r\nconst API_KEY = 'ec54c0409f7f71b36a33826187600e03';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport async function fetchMovieById(movieId) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log('===ERROR===', error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesBySearch(searchQuery, currentPage) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${currentPage}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`,\r\n  );\r\n}\r\n"],"names":["useState","credits","setCredits","movieId","useParams","useEffect","MoviesAPI","then","cast","className","styles","length","map","actor","profile_path","src","alt","original_name","character","id","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","fetchMovieById","axios","data","console","log","fetchMoviesBySearch","searchQuery","currentPage","fetchCast","fetchReviews"],"sourceRoot":""}