{"version":3,"file":"static/js/457.6bdf5cff.chunk.js","mappings":"+NACA,EAAuB,sBAAvB,EAAwD,0BAAxD,EAAyF,sB,SCiDzF,MA7CA,WACE,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAuBH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBN,EAAWM,QAChE,CAACL,KAGF,+BACE,eAAIM,UAAWC,EAAf,SACGT,EACGA,EAAQU,OAAS,EACfV,EAAQW,KAAI,SAAAC,GAAM,OAChB,gBAAqBJ,UAAWC,EAAhC,WACE,iBAAKD,UAAWC,EAAhB,UACGG,EAAOC,eAAeC,aACrB,gBACEC,IACEH,EAAOC,eAAeC,YAAYE,SAAS,QACvCJ,EAAOC,eAAeC,YAAYG,MAAM,GACxC,0CACAL,QADA,IACAA,OADA,EACAA,EAAQC,eAAeC,aAE7BI,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAQO,OACbC,MAAM,SAEN,MAEJ,4BACE,qCADF,WACoBR,QADpB,IACoBA,OADpB,EACoBA,EAAQO,cAG9B,4BACE,mCADF,WACkBP,QADlB,IACkBA,OADlB,EACkBA,EAAQS,aApB5B,OAAST,QAAT,IAASA,OAAT,EAASA,EAAQU,OAwBnB,2CACF,W,yMC3CNC,EAAU,mCACVC,EAAW,+BAAjB,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OACxBD,EADwB,qCACaD,IAIrC,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlC,GAA9B,kGAEoBmC,IAAAA,IAAA,UAClBb,EADkB,kBACAtB,EADA,oBACmBqB,EADnB,oBAFpB,uBAEKe,EAFL,EAEKA,KAFL,kBAKIA,GALJ,gCAOHC,QAAQC,IAAI,cAAZ,MAPG,gFAWA,SAASC,EAAoBC,EAAaC,GAC/C,OAAOlB,EAAuB,GAAD,OACxBD,EADwB,iCACSD,EADT,kBAC0BmB,EAD1B,iBAC8CC,EAD9C,oBAKxB,SAASC,EAAU1C,GACxB,OAAOuB,EAAuB,GAAD,OACxBD,EADwB,kBACNtB,EADM,4BACqBqB,IAI7C,SAASsB,EAAa3C,GAC3B,OAAOuB,EAAuB,GAAD,OACxBD,EADwB,kBACNtB,EADM,4BACqBqB,EADrB","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","services/MoviesAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__EmcM+\",\"listItem\":\"Reviews_listItem__OgqND\",\"user\":\"Reviews_user__Pfgez\"};","import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport * as MoviesAPI from '../../services/MoviesAPI';\r\nimport styles from './Reviews.module.css';\r\n\r\nfunction Reviews() {\r\n  const [reviews, setReviews] = useState([]);\r\n  const { movieId } = useParams();\r\n\r\n  useEffect(() => {\r\n    MoviesAPI.fetchReviews(movieId).then(({ results }) => setReviews(results));\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      <ul className={styles.list}>\r\n        {reviews\r\n          ? reviews.length > 0\r\n            ? reviews.map(review => (\r\n                <li key={review?.id} className={styles.listItem}>\r\n                  <div className={styles.user}>\r\n                    {review.author_details.avatar_path ? (\r\n                      <img\r\n                        src={\r\n                          review.author_details.avatar_path.includes('http')\r\n                            ? review.author_details.avatar_path.slice(1)\r\n                            : 'https://image.tmdb.org/t/p/w300' +\r\n                              review?.author_details.avatar_path\r\n                        }\r\n                        alt={review?.author}\r\n                        width=\"80px\"\r\n                      />\r\n                    ) : null}\r\n\r\n                    <div>\r\n                      <p>NickName:</p> {review?.author}\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <p>Review:</p> {review?.content}\r\n                  </div>\r\n                </li>\r\n              ))\r\n            : \"We don't have any reviews for this movie\"\r\n          : null}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Reviews;\r\n","import axios from 'axios';\r\nconst API_KEY = 'ec54c0409f7f71b36a33826187600e03';\r\nconst BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nasync function fetchWithErrorHandling(url = '', config = {}) {\r\n  const response = await fetch(url, config);\r\n  return response.ok\r\n    ? await response.json()\r\n    : Promise.reject(new Error('Not found'));\r\n}\r\n\r\nexport function fetchMovies() {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/trending/all/day?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport async function fetchMovieById(movieId) {\r\n  try {\r\n    const { data } = await axios.get(\r\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`,\r\n    );\r\n    return data;\r\n  } catch (error) {\r\n    console.log('===ERROR===', error);\r\n  }\r\n}\r\n\r\nexport function fetchMoviesBySearch(searchQuery, currentPage) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}&page=${currentPage}&language=en-US`,\r\n  );\r\n}\r\n\r\nexport function fetchCast(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`,\r\n  );\r\n}\r\n\r\nexport function fetchReviews(movieId) {\r\n  return fetchWithErrorHandling(\r\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`,\r\n  );\r\n}\r\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","MoviesAPI","then","results","className","styles","length","map","review","author_details","avatar_path","src","includes","slice","alt","author","width","content","id","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovies","fetchMovieById","axios","data","console","log","fetchMoviesBySearch","searchQuery","currentPage","fetchCast","fetchReviews"],"sourceRoot":""}